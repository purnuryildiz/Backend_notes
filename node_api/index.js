//API: Gelen istekleri izler ve isteklere cevap gÃ¶nderir.
//gerekli modÃ¼lleri Ã§aÄŸÄ±rdÄ±k:
const http = require("http");
const fs = require("fs");

//kendi oluÅŸturduÄŸumuz fonksiyonu import etmek iÃ§in:
const replaceTemplate = require("./modules/replaceTemplate");

//http modÃ¼lÃ¼nÃ¼n iÃ§erisinde Ã§eÅŸitli methodlar var:

//createServer(), verdiÄŸimiz dinleyici fonksiyonu api'ye her istek geldiÄŸinde tetikler, bu fonksiyon 2 parametre alÄ±r:
//1 request > istek ile ilgili veriler
//2 response > cevap gÃ¶ndermemizi saÄŸlayacak nesne
//Bu fonksiyon iÃ§erisinde gelen isteÄŸe gÃ¶re cevap gÃ¶nderilir:

//Routing:
//API'ye gelen isteiÄŸin hangi endpoint (uÃ§ nokta/yol) e geldÄŸini tespit edip ona gÃ¶re farklÄ± cevaplar gÃ¶nderme iÅŸlemine routing nedir.
//Routing iÃ§in client'Ä±n hangi yola hangi http methodu ile istek attÄ±ldÄ±ÄŸÄ± bilinmesi gerekiyor.

//html ÅŸablon verilerine eriÅŸelim:
let tempOverview = fs.readFileSync("./templates/overview.html", "utf-8");
let tempProduct = fs.readFileSync("./templates/product.html", "utf-8");
let tempCard = fs.readFileSync("./templates/card.html", "utf-8");

//json dosyasÄ±ndaki verilere eriÅŸ:

let jsonData = fs.readFileSync("./dev-data/data.json", "utf-8");

//json verisini js formatÄ±na Ã§evir:
const data = JSON.parse(jsonData);

const server = http.createServer((request, response) => {
  console.log("ğŸ˜€api ye istek geldi");

  //HTML iÃ§eriÄŸi iÃ§in baÅŸlÄ±k ayarla:
  response.setHeader("Content-Type", "text/html; charset=utf-8");

  //gelen isteÄŸin url'sine gÃ¶re farklÄ± cevap gÃ¶nder:

  switch (request.url) {
    case "/overview":
      //meyveler dizisindeki eleman sayÄ±sÄ± kadar kart oluÅŸtur:
      const cards = data.map((el) => tempCard);
      //anasayfa html'indeki kartlar alanÄ±na card html kodlarÄ±nÄ± ekle:
      tempOverview = tempOverview.replace("{%PRODUCT_CARDS%", cards);
      return response.end(tempOverview);
    case "/product":
      return response.end(tempProduct);
    default:
      return response.end("<h1>Tanimlanmayan Yol</h1>");
  }
  //gelen isteÄŸe gÃ¶nderilecek yanÄ±t :
  response.end("Merhaba DÃ¼nya!!!!");
});

//Bir dinleyici oluÅŸturup hangi porta gelen isteklerin dinleneceÄŸi sÃ¶ylenmeli

server.listen("3535", "127.0.0.1", () => {
  console.log("ğŸ˜‰IP adresinin 3535 portuna gelen istekler dinlenmeye alindi");
});
